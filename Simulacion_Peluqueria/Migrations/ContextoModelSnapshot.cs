// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Simulacion_Peluqueria.DAL;

#nullable disable

namespace Simulacion_Peluqueria.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("Simulacion_Peluqueria.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Atendido")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnCola")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TiempoLlegada")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.Configuracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumPeluqueros")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Semilla")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TLlegadas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TiempoCorteMax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TiempoCorteMin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotClientes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.EventoSimulacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResultadoSimulacionId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Tiempo")
                        .HasColumnType("REAL");

                    b.Property<double?>("TiempoCorte")
                        .HasColumnType("REAL");

                    b.Property<double?>("TiempoEspera")
                        .HasColumnType("REAL");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ResultadoSimulacionId");

                    b.ToTable("EventosSimulacion");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.HistorialSimulacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfiguracionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaEjecucion")
                        .HasColumnType("TEXT");

                    b.Property<double>("LongitudPromedioCola")
                        .HasColumnType("REAL");

                    b.Property<int>("NumeroPeluqueros")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResultadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Semilla")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TiempoEsperaPromedio")
                        .HasColumnType("REAL");

                    b.Property<int>("TotalClientes")
                        .HasColumnType("INTEGER");

                    b.Property<double>("UsoPromedioInstalacion")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracionId");

                    b.HasIndex("ResultadoId");

                    b.ToTable("HistorialSimulaciones");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.Indicadores", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<double>("LongitudPromedioCola")
                        .HasColumnType("REAL");

                    b.Property<double>("TiempoEsperaPromedio")
                        .HasColumnType("REAL");

                    b.Property<double>("UsoPromedioInstalacion")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Indicadores");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.ResultadoSimulacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("TiempoTotalSimulacion")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("ResultadosSimulacion");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.EventoSimulacion", b =>
                {
                    b.HasOne("Simulacion_Peluqueria.Models.ResultadoSimulacion", "ResultadoSimulacion")
                        .WithMany("Eventos")
                        .HasForeignKey("ResultadoSimulacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResultadoSimulacion");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.HistorialSimulacion", b =>
                {
                    b.HasOne("Simulacion_Peluqueria.Models.Configuracion", "Configuracion")
                        .WithMany()
                        .HasForeignKey("ConfiguracionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simulacion_Peluqueria.Models.ResultadoSimulacion", "Resultado")
                        .WithMany()
                        .HasForeignKey("ResultadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuracion");

                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.Indicadores", b =>
                {
                    b.HasOne("Simulacion_Peluqueria.Models.ResultadoSimulacion", null)
                        .WithOne("Indicadores")
                        .HasForeignKey("Simulacion_Peluqueria.Models.Indicadores", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Simulacion_Peluqueria.Models.ResultadoSimulacion", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Indicadores")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
